What happens when you initialize a repository? Why do you need to do it?

When a repository is initialized, a .git metadata file is added to the directory location. The location is now an 
empty repository. 

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is different because it is in a limbo. The working directory has already been created and is stored on
the hard drive. The repository has been created also and is waiting for the files to be inserted into it. The staging
area offers the ability to add multiple files in one commit. 

How can you use the staging area to make sure you have one commit per logical change?

You can use the staging area in this way to view the files you are about to commit and make sure they are logical choices. 
Also you can use git diff --staged to compare what is staged to the latest commit.  

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches are useful to test certain experimental changes without effecting the master branch. For instance, on the
asteroids game, an easy mode branch was created that makes the asteroids split into 2 pieces instead of 3. The 
commits for this branch were exactly the same up to the latest commit and the master branch will not have the latest
changes. 

How do the diagrams help you visualize the branch structure?

The diagrams help visualize the branch structure by showing the linear path of each branch and where they meet.
It is useful to know that each named branch can be found by logging. 
